{"version":3,"sources":["app.module.css","components/search/search.tsx","components/search/search.utils.ts","components/search/search.config.ts","components/search/search.hooks.ts","data/data.js","data/rfmos.js","data/flags.js","components/search/search.container.tsx","app.tsx","serviceWorker.ts","index.tsx","components/search/search.module.css"],"names":["module","exports","app","selectionContainer","Search","props","itemToString","initialInputValue","initialSelection","onChange","onKeyDown","stateReducer","items","onStateChange","loading","react_default","a","createElement","downshift_esm","initialSelectedItem","defaultHighlightedIndex","downshift","getInputProps","getMenuProps","getItemProps","isOpen","selectedItem","highlightedIndex","className","styles","searchContainer","Object","assign","searchInput","placeholder","undefined","event","optionList","index_esm","height","itemSize","itemCount","length","outerElementType","_ref","index","style","item","key","id","objectSpread","backgroundColor","color","type","loadingContainer","breakingSpaceRegex","RegExp","replaceWithNormalSpaces","string","replace","groupSelectionsByType","selections","reduce","acc","selection","label","values","push","defineProperty","parseSelectionToInput","lastCharacter","arguments","selectionsLength","concat","map","v","join","parseSelectionGroupedToInput","SEARCH_TYPES","flag","rfmo","vessel","searchTypesList","asyncFields","parseSearchFieldsInput","input","selectedItems","cursorPosition","selectedItemTypes","i","selectedItemLabels","existingSearchTypes","searchFields","split","filter","includes","currentTypeEndIndex","currentTypeStartIndex","currentType","slice","getItemsFiltered","selectedItemIds","itemsNotSelected","cleanValue","matchSorter","keys","data","toConsumableArray","r","SearchContainer","_useResultsFiltered","staticData","initialValue","initialState","search","results","_useReducer","useReducer","state","action","payload","_useReducer2","slicedToArray","dispatch","useEffect","searchFieldsTypes","f","needsRequest","some","searchQuery","asyncNeeded","controller","AbortController","searchUrl","fetch","signal","then","response","status","Promise","resolve","reject","Error","statusText","json","apiResults","entries","d","name","vesselId","catch","err","console","error","abort","useResultsFiltered","_useResultsFiltered2","handleStateChange","useCallback","changes","downshiftState","hasOwnProperty","_downshiftState$input","inputValue","inputValueString","handleConfirmSelection","currentItems","find","getSelectedItemsByInput","currentSelection","inputValuesParsed","s","_s$split","_s$split2","labels","l","parseInputToFields","p","handleChangeInput","newInput","oldInput","Math","max","calculateCursorPosition","currentLabelEndIndex","currentLabelStartIndex","currentLabel","Downshift","stateChangeTypes","keyDownEnter","clickItem","changeInput","customKeyDownHandler","setState","hasValue","isSpace","isComma","hasOneOptions","nativeEvent","preventDownshiftDefault","useMemo","search_search","App","urlSelection","query","qs","parse","window","location","ignoreQueryPrefix","_useState","useState","_useState2","updateSelection","handleChange","selectionQuery","stringify","addQueryPrefix","url","origin","pathname","history","replaceState","search_container","selectionList","charAt","toUpperCase","value","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,CEHe,CACb,CACEkB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,wBAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,kBAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,uCAET,CACEhB,GAAI,MACJgB,MAAO,uBAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,0BAET,CACEhB,GAAI,MACJgB,MAAO,uBAET,CACEhB,GAAI,MACJgB,MAAO,gDAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,yBAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,4BAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,2BAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,yBAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,kBAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,sBAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,kBAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,kBAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,qBAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,qCAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,kCAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,yBAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,4BAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,kBAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,oBAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,0BAET,CACEhB,GAAI,MACJgB,MAAO,mBAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,6BAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,kCAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,4BAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,QAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,eAET,CACEhB,GAAI,MACJgB,MAAO,SAET,CACEhB,GAAI,MACJgB,MAAO,uBAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,YAET,CACEhB,GAAI,MACJgB,MAAO,UAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,wCAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,iBAET,CACEhB,GAAI,MACJgB,MAAO,cAET,CACEhB,GAAI,MACJgB,MAAO,gBAET,CACEhB,GAAI,MACJgB,MAAO,oCAET,CACEhB,GAAI,MACJgB,MAAO,aAET,CACEhB,GAAI,MACJgB,MAAO,0BAET,CACEhB,GAAI,MACJgB,MAAO,gCAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,WAET,CACEhB,GAAI,MACJgB,MAAO,qBAET,CACEhB,GAAI,MACJgB,MAAO,SAET,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","file":"static/js/main.762256bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__-D6m5\",\"selectionContainer\":\"app_selectionContainer__3Lt25\"};","import React from 'react'\nimport styles from './search.module.css'\nimport Downshift, { DownshiftState, StateChangeOptions } from 'downshift'\nimport { FixedSizeList } from 'react-window'\nimport { DataItem } from '../../types/data'\n\n// TODO: highlight search terms on results list\n// const HighlightedField = ({ string, query }) => {\n//   if (!string) return ''\n//   const fragments = string.replace(new RegExp(query, 'gi'), `<mark>${query}</mark>`)\n//   return <span dangerouslySetInnerHTML={{ __html: fragments }} /> // eslint-disable-line\n// }\n\ninterface SearchProps {\n  items: DataItem[]\n  loading?: boolean\n  initialInputValue?: string\n  initialSelection?: DataItem[]\n  itemToString(obj: DataItem): string\n  onChange?(selectedItems: DataItem[], downshiftState: any): void\n  onKeyDown?(\n    event: React.KeyboardEvent<HTMLInputElement>,\n    downshiftState: DownshiftState<DataItem[]>\n  ): void\n  stateReducer(\n    state: DownshiftState<DataItem[]>,\n    changes: StateChangeOptions<DataItem[]>\n  ): StateChangeOptions<DataItem[]>\n  onStateChange(\n    changes: StateChangeOptions<DataItem[]>,\n    downshiftState: DownshiftState<DataItem[]>\n  ): void\n}\n\nconst Search: React.FC<SearchProps> = (props) => {\n  const {\n    itemToString,\n    initialInputValue,\n    initialSelection,\n    onChange,\n    onKeyDown,\n    stateReducer,\n    items,\n    onStateChange,\n    loading,\n  } = props\n  return (\n    <Downshift\n      onChange={onChange}\n      initialInputValue={initialInputValue}\n      initialSelectedItem={initialSelection}\n      stateReducer={stateReducer}\n      itemToString={itemToString}\n      onStateChange={onStateChange}\n      defaultHighlightedIndex={0}\n    >\n      {(downshift) => {\n        const {\n          getInputProps,\n          getMenuProps,\n          getItemProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n        } = downshift\n        return (\n          <div className={styles.searchContainer}>\n            <div>\n              <input\n                className={styles.searchInput}\n                {...getInputProps({\n                  placeholder: 'Start searching',\n                  onKeyDown:\n                    onKeyDown !== undefined ? (event) => onKeyDown(event, downshift) : undefined,\n                })}\n              />\n            </div>\n            {!isOpen ? null : (\n              <div className={styles.optionList}>\n                <FixedSizeList\n                  height={300}\n                  itemSize={20}\n                  itemCount={items.length}\n                  outerElementType=\"ul\"\n                  {...getMenuProps()}\n                >\n                  {({ index, style }) => {\n                    const item = items[index]\n                    return (\n                      <li\n                        key={item.id}\n                        {...getItemProps({\n                          item,\n                          index,\n                        })}\n                        style={{\n                          ...style,\n                          backgroundColor: highlightedIndex === index ? '#ccc' : 'transparent',\n                          color: selectedItem === item ? '#0f0f0f' : '#000',\n                        }}\n                      >\n                        {item.type}: {itemToString(item)}\n                      </li>\n                    )\n                  }}\n                </FixedSizeList>\n                {loading === true && <span className={styles.loadingContainer}> loading...</span>}\n              </div>\n            )}\n          </div>\n        )\n      }}\n    </Downshift>\n  )\n}\n\nexport default Search\n","import { DataSelectionGrouped, DataSelection, DataValue } from './search.types'\nimport { DataItem } from '../../types/data'\n\n// Hack to look like spaces but be able to identify between input spaces and label spaces\nconst breakingSpaceCharacter = '\\u00a0'\nconst breakingSpaceRegex = new RegExp(breakingSpaceCharacter, 'g')\nexport const replaceWithBreakingSpaces = (string: string) =>\n  string.replace(/\\s/gi, breakingSpaceCharacter)\nexport const replaceWithNormalSpaces = (string: string) => string.replace(breakingSpaceRegex, ' ')\n\nexport const parseSelectionGroupedToInput = (\n  selections: DataSelectionGrouped,\n  lastCharacter: string = ' '\n) => {\n  const selectionsLength = Object.values(selections).length - 1\n  return Object.values(selections).reduce(\n    (acc: string, item: DataSelection, index: number) =>\n      `${acc !== '' ? `${acc} ` : ''}${item.type}:${item.values\n        .map((v: DataValue) => replaceWithBreakingSpaces(v.label))\n        .join(',')}${index === selectionsLength ? lastCharacter : ''}`,\n    ''\n  )\n}\n\nexport const groupSelectionsByType = (selections: DataItem[]): DataSelectionGrouped => {\n  if (selections === null) return {}\n  return selections.reduce((acc: DataSelectionGrouped, selection: DataItem) => {\n    const { type, id, label } = selection\n    const existingType = acc[type]\n    if (existingType) {\n      acc[type].values.push({ id, label })\n      return acc\n    }\n    return {\n      ...acc,\n      [type]: { type, values: [{ id, label }] },\n    }\n  }, {})\n}\n\nexport const parseSelectionToInput = (\n  selection: DataItem[],\n  lastCharacter: string = ' '\n): string => {\n  const groupedSelections = groupSelectionsByType(selection)\n  return parseSelectionGroupedToInput(groupedSelections, lastCharacter)\n}\n\nexport const parseInputToFields = (input: string): { type: string; labels: string[] }[] => {\n  return input\n    .split(' ')\n    .filter((s) => s)\n    .map((s) => {\n      const [type, labels] = s.split(':')\n      return {\n        type,\n        labels: labels\n          ? labels\n              .split(',')\n              .map(replaceWithNormalSpaces)\n              .filter((l) => l)\n          : [],\n      }\n    })\n}\n\nexport const calculateCursorPosition = (newInput: string, oldInput: string): number => {\n  if (!newInput || !oldInput) return 0\n  let cursorPosition = 0\n  const length = Math.max(oldInput.length, newInput.length)\n  for (let i = 0; i < length; i++) {\n    if (newInput[i] === undefined) {\n      cursorPosition -= 1\n    } else if (oldInput[i] === newInput[i]) {\n      cursorPosition += 1\n    }\n  }\n  return cursorPosition\n}\n","export const SEARCH_TYPES = {\n  flag: 'flag',\n  rfmo: 'rfmo',\n  vessel: 'vessel',\n}\n\nexport const searchTypesList = [SEARCH_TYPES.flag, SEARCH_TYPES.rfmo, SEARCH_TYPES.vessel]\nexport const asyncFields = [SEARCH_TYPES.vessel]\n","import { useEffect, useReducer } from 'react'\nimport matchSorter from 'match-sorter'\nimport { DataItem } from '../../types/data'\nimport { VesselAPIResult } from '../../types/api'\nimport { replaceWithNormalSpaces } from './search.utils'\nimport { searchTypesList, asyncFields } from './search.config'\n\nconst parseSearchFieldsInput = (\n  input: string,\n  selectedItems: DataItem[],\n  cursorPosition: number\n) => {\n  const selectedItemTypes = (selectedItems && selectedItems.map((i) => i.type)) || []\n  const selectedItemLabels = (selectedItems && selectedItems.map((i) => i.label)) || []\n  const existingSearchTypes: { [type: string]: boolean } = {}\n\n  const searchFields = input\n    .replace(/:/gi, ' ')\n    .replace(/,/gi, ' ')\n    .split(' ')\n    // Space replacement needs to be done after splitting by regular spaces\n    .map(replaceWithNormalSpaces)\n    .filter((v: any) => {\n      if (!v || v === '') return false\n      if (selectedItemTypes.includes(v)) {\n        // Needed when search by type with a current type filter added\n        if (!existingSearchTypes[v]) {\n          existingSearchTypes[v] = true\n          return false\n        } else {\n          return true\n        }\n      }\n      return !selectedItemLabels.includes(v)\n    })\n  const isLastSpace = input[cursorPosition] === ' '\n  if (!isLastSpace) {\n    let currentTypeEndIndex = 0\n    let currentTypeStartIndex = 0\n    for (let i = cursorPosition; i > 0; i--) {\n      if (input[i] === ':') {\n        currentTypeEndIndex = i\n      } else if (input[i] === ' ') {\n        currentTypeStartIndex = i + 1\n        break\n      }\n    }\n    const currentType = input.slice(currentTypeStartIndex, currentTypeEndIndex)\n    if (currentType) {\n      searchFields.push(currentType)\n    }\n  }\n  return searchFields\n}\n\nconst getItemsFiltered = (\n  items: DataItem[],\n  input: string,\n  selectedItems: DataItem[],\n  cursorPosition: number\n): DataItem[] => {\n  if (!input) return items\n  let selectedItemIds = (selectedItems && selectedItems.map((i) => i.id)) || []\n\n  const searchFields = parseSearchFieldsInput(input, selectedItems, cursorPosition)\n  const itemsNotSelected =\n    selectedItemIds.length > 0 ? items.filter((i) => !selectedItemIds.includes(i.id)) : items\n\n  return searchFields.reduce((acc, cleanValue) => {\n    return matchSorter(acc, cleanValue, { keys: ['label', 'type'] })\n  }, itemsNotSelected)\n}\n\ninterface ResultsAction {\n  type: 'inputChange' | 'startSearch' | 'endSearch'\n  payload?: any\n}\n\ninterface ResultsState {\n  loading: boolean\n  staticData: DataItem[]\n  selectedItem: DataItem[]\n  cursorPosition: number\n  search: string\n  results: DataItem[]\n}\n\nexport const useResultsFiltered = (staticData: DataItem[], initialValue?: string): any => {\n  const initialState: ResultsState = {\n    loading: false,\n    staticData,\n    selectedItem: [],\n    cursorPosition: 0,\n    search: initialValue || '',\n    results: staticData,\n  }\n  const resultsReducer = (state: ResultsState, action: ResultsAction): ResultsState => {\n    switch (action.type) {\n      case 'inputChange':\n        return { ...state, ...action.payload }\n      case 'startSearch': {\n        const { staticData, search, selectedItem, cursorPosition } = state\n        return {\n          ...state,\n          results: getItemsFiltered(staticData, search, selectedItem, cursorPosition),\n          loading: action.payload,\n        }\n      }\n      case 'endSearch': {\n        return {\n          ...state,\n          results: [...state.results, ...action.payload],\n          loading: false,\n        }\n      }\n      default:\n        return state\n    }\n  }\n  const [state, dispatch] = useReducer(resultsReducer, initialState)\n  const { search, selectedItem, cursorPosition } = state\n  useEffect(() => {\n    const searchFields = parseSearchFieldsInput(search, selectedItem, cursorPosition)\n    const searchFieldsTypes = searchFields.filter((f) => searchTypesList.includes(f))\n    const needsRequest =\n      searchFieldsTypes.length === 0 || searchFieldsTypes.some((r) => asyncFields.includes(r))\n    const selectedItemIds = selectedItem.map((i: DataItem) => i.id)\n    const selectedItemLabels = selectedItem.map((i: DataItem) => i.label)\n    const searchQuery = searchFields\n      .filter((f) => !selectedItemLabels.includes(f) && !searchTypesList.includes(f))\n      .join(',')\n    const asyncNeeded = needsRequest && searchQuery !== ''\n    dispatch({ type: 'startSearch', payload: asyncNeeded })\n    if (asyncNeeded) {\n      const controller = new AbortController()\n      const searchUrl = `https://vessels-dot-world-fishing-827.appspot.com/datasets/indonesia/vessels?query=${searchQuery}&offset=0`\n\n      fetch(searchUrl, { signal: controller.signal })\n        .then((response) =>\n          response.status >= 200 && response.status < 300\n            ? Promise.resolve(response)\n            : Promise.reject(new Error(response.statusText))\n        )\n        .then((response) => response.json())\n        .then((data: VesselAPIResult) => {\n          const apiResults = data.entries\n            .filter((d) => d.name)\n            .map((d) => ({ id: d.vesselId, label: d.name, type: 'vessel' }))\n            .filter((d) => !selectedItemIds.includes(d.id))\n          dispatch({ type: 'endSearch', payload: apiResults })\n        })\n        .catch((err) => {\n          if (err.name !== 'AbortError') {\n            console.error('Oops!', err)\n          }\n          dispatch({ type: 'endSearch', payload: [] })\n        })\n      return () => controller.abort()\n    }\n  }, [search])\n  return [state, dispatch]\n}\n","import rfmos from './rfmos'\nimport flags from './flags'\n\nexport default [\n  ...rfmos.map((r) => ({ ...r, type: 'rfmo' })),\n  ...flags.map((r) => ({ ...r, type: 'flag' })),\n]\n","export default [\n  {\n    id: 'ICCAT',\n    label: 'ICCAT',\n  },\n  {\n    id: 'IOTC',\n    label: 'IOTC',\n  },\n  {\n    id: 'WCPFC',\n    label: 'WCPFC',\n  },\n  {\n    id: 'IATTC',\n    label: 'IATTC',\n  },\n  {\n    id: 'AIDCP',\n    label: 'AIDCP',\n  },\n  {\n    id: 'CCSBT',\n    label: 'CCSBT',\n  },\n]\n","export default [\n  {\n    id: 'ABW',\n    label: 'Aruba',\n  },\n  {\n    id: 'AFG',\n    label: 'Afghanistan',\n  },\n  {\n    id: 'AGO',\n    label: 'Angola',\n  },\n  {\n    id: 'AIA',\n    label: 'Anguilla',\n  },\n  {\n    id: 'ALA',\n    label: 'Åland Islands',\n  },\n  {\n    id: 'ALB',\n    label: 'Albania',\n  },\n  {\n    id: 'AND',\n    label: 'Andorra',\n  },\n  {\n    id: 'ARE',\n    label: 'United Arab Emirates',\n  },\n  {\n    id: 'ARG',\n    label: 'Argentina',\n  },\n  {\n    id: 'ARM',\n    label: 'Armenia',\n  },\n  {\n    id: 'ASM',\n    label: 'American Samoa',\n  },\n  {\n    id: 'ATA',\n    label: 'Antarctica',\n  },\n  {\n    id: 'ATF',\n    label: 'French Southern and Antarctic Lands',\n  },\n  {\n    id: 'ATG',\n    label: 'Antigua and Barbuda',\n  },\n  {\n    id: 'AUS',\n    label: 'Australia',\n  },\n  {\n    id: 'AUT',\n    label: 'Austria',\n  },\n  {\n    id: 'AZE',\n    label: 'Azerbaijan',\n  },\n  {\n    id: 'BDI',\n    label: 'Burundi',\n  },\n  {\n    id: 'BEL',\n    label: 'Belgium',\n  },\n  {\n    id: 'BEN',\n    label: 'Benin',\n  },\n  {\n    id: 'BFA',\n    label: 'Burkina Faso',\n  },\n  {\n    id: 'BGD',\n    label: 'Bangladesh',\n  },\n  {\n    id: 'BGR',\n    label: 'Bulgaria',\n  },\n  {\n    id: 'BHR',\n    label: 'Bahrain',\n  },\n  {\n    id: 'BHS',\n    label: 'Bahamas',\n  },\n  {\n    id: 'BIH',\n    label: 'Bosnia and Herzegovina',\n  },\n  {\n    id: 'BLM',\n    label: 'Saint Barthélemy',\n  },\n  {\n    id: 'SHN',\n    label: 'Saint Helena, Ascension and Tristan da Cunha',\n  },\n  {\n    id: 'BLR',\n    label: 'Belarus',\n  },\n  {\n    id: 'BLZ',\n    label: 'Belize',\n  },\n  {\n    id: 'BMU',\n    label: 'Bermuda',\n  },\n  {\n    id: 'BOL',\n    label: 'Bolivia',\n  },\n  {\n    id: 'BES',\n    label: 'Caribbean Netherlands',\n  },\n  {\n    id: 'BRA',\n    label: 'Brazil',\n  },\n  {\n    id: 'BRB',\n    label: 'Barbados',\n  },\n  {\n    id: 'BRN',\n    label: 'Brunei',\n  },\n  {\n    id: 'BTN',\n    label: 'Bhutan',\n  },\n  {\n    id: 'BVT',\n    label: 'Bouvet Island',\n  },\n  {\n    id: 'BWA',\n    label: 'Botswana',\n  },\n  {\n    id: 'CAF',\n    label: 'Central African Republic',\n  },\n  {\n    id: 'CAN',\n    label: 'Canada',\n  },\n  {\n    id: 'CCK',\n    label: 'Cocos (Keeling) Islands',\n  },\n  {\n    id: 'CHE',\n    label: 'Switzerland',\n  },\n  {\n    id: 'CHL',\n    label: 'Chile',\n  },\n  {\n    id: 'CHN',\n    label: 'China',\n  },\n  {\n    id: 'CIV',\n    label: 'Ivory Coast',\n  },\n  {\n    id: 'CMR',\n    label: 'Cameroon',\n  },\n  {\n    id: 'COD',\n    label: 'DR Congo',\n  },\n  {\n    id: 'COG',\n    label: 'Republic of the Congo',\n  },\n  {\n    id: 'COK',\n    label: 'Cook Islands',\n  },\n  {\n    id: 'COL',\n    label: 'Colombia',\n  },\n  {\n    id: 'COM',\n    label: 'Comoros',\n  },\n  {\n    id: 'CPV',\n    label: 'Cape Verde',\n  },\n  {\n    id: 'CRI',\n    label: 'Costa Rica',\n  },\n  {\n    id: 'CUB',\n    label: 'Cuba',\n  },\n  {\n    id: 'CUW',\n    label: 'Curaçao',\n  },\n  {\n    id: 'CXR',\n    label: 'Christmas Island',\n  },\n  {\n    id: 'CYM',\n    label: 'Cayman Islands',\n  },\n  {\n    id: 'CYP',\n    label: 'Cyprus',\n  },\n  {\n    id: 'CZE',\n    label: 'Czechia',\n  },\n  {\n    id: 'DEU',\n    label: 'Germany',\n  },\n  {\n    id: 'DJI',\n    label: 'Djibouti',\n  },\n  {\n    id: 'DMA',\n    label: 'Dominica',\n  },\n  {\n    id: 'DNK',\n    label: 'Denmark',\n  },\n  {\n    id: 'DOM',\n    label: 'Dominican Republic',\n  },\n  {\n    id: 'DZA',\n    label: 'Algeria',\n  },\n  {\n    id: 'ECU',\n    label: 'Ecuador',\n  },\n  {\n    id: 'EGY',\n    label: 'Egypt',\n  },\n  {\n    id: 'ERI',\n    label: 'Eritrea',\n  },\n  {\n    id: 'ESH',\n    label: 'Western Sahara',\n  },\n  {\n    id: 'ESP',\n    label: 'Spain',\n  },\n  {\n    id: 'EST',\n    label: 'Estonia',\n  },\n  {\n    id: 'ETH',\n    label: 'Ethiopia',\n  },\n  {\n    id: 'FIN',\n    label: 'Finland',\n  },\n  {\n    id: 'FJI',\n    label: 'Fiji',\n  },\n  {\n    id: 'FLK',\n    label: 'Falkland Islands',\n  },\n  {\n    id: 'FRA',\n    label: 'France',\n  },\n  {\n    id: 'FRO',\n    label: 'Faroe Islands',\n  },\n  {\n    id: 'FSM',\n    label: 'Micronesia',\n  },\n  {\n    id: 'GAB',\n    label: 'Gabon',\n  },\n  {\n    id: 'GBR',\n    label: 'United Kingdom',\n  },\n  {\n    id: 'GEO',\n    label: 'Georgia',\n  },\n  {\n    id: 'GGY',\n    label: 'Guernsey',\n  },\n  {\n    id: 'GHA',\n    label: 'Ghana',\n  },\n  {\n    id: 'GIB',\n    label: 'Gibraltar',\n  },\n  {\n    id: 'GIN',\n    label: 'Guinea',\n  },\n  {\n    id: 'GLP',\n    label: 'Guadeloupe',\n  },\n  {\n    id: 'GMB',\n    label: 'Gambia',\n  },\n  {\n    id: 'GNB',\n    label: 'Guinea-Bissau',\n  },\n  {\n    id: 'GNQ',\n    label: 'Equatorial Guinea',\n  },\n  {\n    id: 'GRC',\n    label: 'Greece',\n  },\n  {\n    id: 'GRD',\n    label: 'Grenada',\n  },\n  {\n    id: 'GRL',\n    label: 'Greenland',\n  },\n  {\n    id: 'GTM',\n    label: 'Guatemala',\n  },\n  {\n    id: 'GUF',\n    label: 'French Guiana',\n  },\n  {\n    id: 'GUM',\n    label: 'Guam',\n  },\n  {\n    id: 'GUY',\n    label: 'Guyana',\n  },\n  {\n    id: 'HKG',\n    label: 'Hong Kong',\n  },\n  {\n    id: 'HMD',\n    label: 'Heard Island and McDonald Islands',\n  },\n  {\n    id: 'HND',\n    label: 'Honduras',\n  },\n  {\n    id: 'HRV',\n    label: 'Croatia',\n  },\n  {\n    id: 'HTI',\n    label: 'Haiti',\n  },\n  {\n    id: 'HUN',\n    label: 'Hungary',\n  },\n  {\n    id: 'IDN',\n    label: 'Indonesia',\n  },\n  {\n    id: 'IMN',\n    label: 'Isle of Man',\n  },\n  {\n    id: 'IND',\n    label: 'India',\n  },\n  {\n    id: 'IOT',\n    label: 'British Indian Ocean Territory',\n  },\n  {\n    id: 'IRL',\n    label: 'Ireland',\n  },\n  {\n    id: 'IRN',\n    label: 'Iran',\n  },\n  {\n    id: 'IRQ',\n    label: 'Iraq',\n  },\n  {\n    id: 'ISL',\n    label: 'Iceland',\n  },\n  {\n    id: 'ISR',\n    label: 'Israel',\n  },\n  {\n    id: 'ITA',\n    label: 'Italy',\n  },\n  {\n    id: 'JAM',\n    label: 'Jamaica',\n  },\n  {\n    id: 'JEY',\n    label: 'Jersey',\n  },\n  {\n    id: 'JOR',\n    label: 'Jordan',\n  },\n  {\n    id: 'JPN',\n    label: 'Japan',\n  },\n  {\n    id: 'KAZ',\n    label: 'Kazakhstan',\n  },\n  {\n    id: 'KEN',\n    label: 'Kenya',\n  },\n  {\n    id: 'KGZ',\n    label: 'Kyrgyzstan',\n  },\n  {\n    id: 'KHM',\n    label: 'Cambodia',\n  },\n  {\n    id: 'KIR',\n    label: 'Kiribati',\n  },\n  {\n    id: 'KNA',\n    label: 'Saint Kitts and Nevis',\n  },\n  {\n    id: 'KOR',\n    label: 'South Korea',\n  },\n  {\n    id: 'UNK',\n    label: 'Kosovo',\n  },\n  {\n    id: 'KWT',\n    label: 'Kuwait',\n  },\n  {\n    id: 'LAO',\n    label: 'Laos',\n  },\n  {\n    id: 'LBN',\n    label: 'Lebanon',\n  },\n  {\n    id: 'LBR',\n    label: 'Liberia',\n  },\n  {\n    id: 'LBY',\n    label: 'Libya',\n  },\n  {\n    id: 'LCA',\n    label: 'Saint Lucia',\n  },\n  {\n    id: 'LIE',\n    label: 'Liechtenstein',\n  },\n  {\n    id: 'LKA',\n    label: 'Sri Lanka',\n  },\n  {\n    id: 'LSO',\n    label: 'Lesotho',\n  },\n  {\n    id: 'LTU',\n    label: 'Lithuania',\n  },\n  {\n    id: 'LUX',\n    label: 'Luxembourg',\n  },\n  {\n    id: 'LVA',\n    label: 'Latvia',\n  },\n  {\n    id: 'MAC',\n    label: 'Macau',\n  },\n  {\n    id: 'MAF',\n    label: 'Saint Martin',\n  },\n  {\n    id: 'MAR',\n    label: 'Morocco',\n  },\n  {\n    id: 'MCO',\n    label: 'Monaco',\n  },\n  {\n    id: 'MDA',\n    label: 'Moldova',\n  },\n  {\n    id: 'MDG',\n    label: 'Madagascar',\n  },\n  {\n    id: 'MDV',\n    label: 'Maldives',\n  },\n  {\n    id: 'MEX',\n    label: 'Mexico',\n  },\n  {\n    id: 'MHL',\n    label: 'Marshall Islands',\n  },\n  {\n    id: 'MKD',\n    label: 'Macedonia',\n  },\n  {\n    id: 'MLI',\n    label: 'Mali',\n  },\n  {\n    id: 'MLT',\n    label: 'Malta',\n  },\n  {\n    id: 'MMR',\n    label: 'Myanmar',\n  },\n  {\n    id: 'MNE',\n    label: 'Montenegro',\n  },\n  {\n    id: 'MNG',\n    label: 'Mongolia',\n  },\n  {\n    id: 'MNP',\n    label: 'Northern Mariana Islands',\n  },\n  {\n    id: 'MOZ',\n    label: 'Mozambique',\n  },\n  {\n    id: 'MRT',\n    label: 'Mauritania',\n  },\n  {\n    id: 'MSR',\n    label: 'Montserrat',\n  },\n  {\n    id: 'MTQ',\n    label: 'Martinique',\n  },\n  {\n    id: 'MUS',\n    label: 'Mauritius',\n  },\n  {\n    id: 'MWI',\n    label: 'Malawi',\n  },\n  {\n    id: 'MYS',\n    label: 'Malaysia',\n  },\n  {\n    id: 'MYT',\n    label: 'Mayotte',\n  },\n  {\n    id: 'NAM',\n    label: 'Namibia',\n  },\n  {\n    id: 'NCL',\n    label: 'New Caledonia',\n  },\n  {\n    id: 'NER',\n    label: 'Niger',\n  },\n  {\n    id: 'NFK',\n    label: 'Norfolk Island',\n  },\n  {\n    id: 'NGA',\n    label: 'Nigeria',\n  },\n  {\n    id: 'NIC',\n    label: 'Nicaragua',\n  },\n  {\n    id: 'NIU',\n    label: 'Niue',\n  },\n  {\n    id: 'NLD',\n    label: 'Netherlands',\n  },\n  {\n    id: 'NOR',\n    label: 'Norway',\n  },\n  {\n    id: 'NPL',\n    label: 'Nepal',\n  },\n  {\n    id: 'NRU',\n    label: 'Nauru',\n  },\n  {\n    id: 'NZL',\n    label: 'New Zealand',\n  },\n  {\n    id: 'OMN',\n    label: 'Oman',\n  },\n  {\n    id: 'PAK',\n    label: 'Pakistan',\n  },\n  {\n    id: 'PAN',\n    label: 'Panama',\n  },\n  {\n    id: 'PCN',\n    label: 'Pitcairn Islands',\n  },\n  {\n    id: 'PER',\n    label: 'Peru',\n  },\n  {\n    id: 'PHL',\n    label: 'Philippines',\n  },\n  {\n    id: 'PLW',\n    label: 'Palau',\n  },\n  {\n    id: 'PNG',\n    label: 'Papua New Guinea',\n  },\n  {\n    id: 'POL',\n    label: 'Poland',\n  },\n  {\n    id: 'PRI',\n    label: 'Puerto Rico',\n  },\n  {\n    id: 'PRK',\n    label: 'North Korea',\n  },\n  {\n    id: 'PRT',\n    label: 'Portugal',\n  },\n  {\n    id: 'PRY',\n    label: 'Paraguay',\n  },\n  {\n    id: 'PSE',\n    label: 'Palestine',\n  },\n  {\n    id: 'PYF',\n    label: 'French Polynesia',\n  },\n  {\n    id: 'QAT',\n    label: 'Qatar',\n  },\n  {\n    id: 'REU',\n    label: 'Réunion',\n  },\n  {\n    id: 'ROU',\n    label: 'Romania',\n  },\n  {\n    id: 'RUS',\n    label: 'Russia',\n  },\n  {\n    id: 'RWA',\n    label: 'Rwanda',\n  },\n  {\n    id: 'SAU',\n    label: 'Saudi Arabia',\n  },\n  {\n    id: 'SDN',\n    label: 'Sudan',\n  },\n  {\n    id: 'SEN',\n    label: 'Senegal',\n  },\n  {\n    id: 'SGP',\n    label: 'Singapore',\n  },\n  {\n    id: 'SGS',\n    label: 'South Georgia',\n  },\n  {\n    id: 'SJM',\n    label: 'Svalbard and Jan Mayen',\n  },\n  {\n    id: 'SLB',\n    label: 'Solomon Islands',\n  },\n  {\n    id: 'SLE',\n    label: 'Sierra Leone',\n  },\n  {\n    id: 'SLV',\n    label: 'El Salvador',\n  },\n  {\n    id: 'SMR',\n    label: 'San Marino',\n  },\n  {\n    id: 'SOM',\n    label: 'Somalia',\n  },\n  {\n    id: 'SPM',\n    label: 'Saint Pierre and Miquelon',\n  },\n  {\n    id: 'SRB',\n    label: 'Serbia',\n  },\n  {\n    id: 'SSD',\n    label: 'South Sudan',\n  },\n  {\n    id: 'STP',\n    label: 'São Tomé and Príncipe',\n  },\n  {\n    id: 'SUR',\n    label: 'Suriname',\n  },\n  {\n    id: 'SVK',\n    label: 'Slovakia',\n  },\n  {\n    id: 'SVN',\n    label: 'Slovenia',\n  },\n  {\n    id: 'SWE',\n    label: 'Sweden',\n  },\n  {\n    id: 'SWZ',\n    label: 'Eswatini',\n  },\n  {\n    id: 'SXM',\n    label: 'Sint Maarten',\n  },\n  {\n    id: 'SYC',\n    label: 'Seychelles',\n  },\n  {\n    id: 'SYR',\n    label: 'Syria',\n  },\n  {\n    id: 'TCA',\n    label: 'Turks and Caicos Islands',\n  },\n  {\n    id: 'TCD',\n    label: 'Chad',\n  },\n  {\n    id: 'TGO',\n    label: 'Togo',\n  },\n  {\n    id: 'THA',\n    label: 'Thailand',\n  },\n  {\n    id: 'TJK',\n    label: 'Tajikistan',\n  },\n  {\n    id: 'TKL',\n    label: 'Tokelau',\n  },\n  {\n    id: 'TKM',\n    label: 'Turkmenistan',\n  },\n  {\n    id: 'TLS',\n    label: 'Timor-Leste',\n  },\n  {\n    id: 'TON',\n    label: 'Tonga',\n  },\n  {\n    id: 'TTO',\n    label: 'Trinidad and Tobago',\n  },\n  {\n    id: 'TUN',\n    label: 'Tunisia',\n  },\n  {\n    id: 'TUR',\n    label: 'Turkey',\n  },\n  {\n    id: 'TUV',\n    label: 'Tuvalu',\n  },\n  {\n    id: 'TWN',\n    label: 'Taiwan',\n  },\n  {\n    id: 'TZA',\n    label: 'Tanzania',\n  },\n  {\n    id: 'UGA',\n    label: 'Uganda',\n  },\n  {\n    id: 'UKR',\n    label: 'Ukraine',\n  },\n  {\n    id: 'UMI',\n    label: 'United States Minor Outlying Islands',\n  },\n  {\n    id: 'URY',\n    label: 'Uruguay',\n  },\n  {\n    id: 'USA',\n    label: 'United States',\n  },\n  {\n    id: 'UZB',\n    label: 'Uzbekistan',\n  },\n  {\n    id: 'VAT',\n    label: 'Vatican City',\n  },\n  {\n    id: 'VCT',\n    label: 'Saint Vincent and the Grenadines',\n  },\n  {\n    id: 'VEN',\n    label: 'Venezuela',\n  },\n  {\n    id: 'VGB',\n    label: 'British Virgin Islands',\n  },\n  {\n    id: 'VIR',\n    label: 'United States Virgin Islands',\n  },\n  {\n    id: 'VNM',\n    label: 'Vietnam',\n  },\n  {\n    id: 'VUT',\n    label: 'Vanuatu',\n  },\n  {\n    id: 'WLF',\n    label: 'Wallis and Futuna',\n  },\n  {\n    id: 'WSM',\n    label: 'Samoa',\n  },\n  {\n    id: 'YEM',\n    label: 'Yemen',\n  },\n  {\n    id: 'ZAF',\n    label: 'South Africa',\n  },\n  {\n    id: 'ZMB',\n    label: 'Zambia',\n  },\n  {\n    id: 'ZWE',\n    label: 'Zimbabwe',\n  },\n]\n","import React, { useCallback, useMemo } from 'react'\nimport SearchComponent from './search'\nimport Downshift, { DownshiftState, StateChangeOptions } from 'downshift'\nimport { useResultsFiltered } from './search.hooks'\n\nimport data from '../../data/data'\nimport { DataItem } from '../../types/data'\nimport {\n  replaceWithNormalSpaces,\n  parseSelectionToInput,\n  calculateCursorPosition,\n  parseInputToFields,\n} from './search.utils'\nimport { asyncFields } from './search.config'\n\ninterface SearchContainerProps {\n  initialSelection: DataItem[]\n  onChange(selectedItems: DataItem[], inputValue: string): void\n}\n\nconst SearchContainer: React.FC<SearchContainerProps> = (props) => {\n  let cursorPosition = 0\n  const [state, dispatch] = useResultsFiltered(data, '')\n  const { initialSelection, onChange } = props\n  const { results, loading } = state\n\n  const handleStateChange = useCallback(\n    (changes: StateChangeOptions<DataItem[]>, downshiftState: DownshiftState<DataItem[]>) => {\n      if (changes.hasOwnProperty('inputValue')) {\n        const { inputValue = '', selectedItem } = downshiftState\n        const inputValueString = inputValue || ''\n        if (selectedItem !== null) {\n          onChange(selectedItem, inputValueString)\n          if (inputValue) {\n            dispatch({\n              type: 'inputChange',\n              payload: { search: inputValueString, selectedItem, cursorPosition },\n            })\n          }\n        }\n      }\n    },\n    []\n  )\n\n  const handleConfirmSelection = (\n    state: DownshiftState<any>,\n    changes: StateChangeOptions<any>,\n    lastCharacter: string = ' '\n  ): StateChangeOptions<any> => {\n    const currentItems = state.selectedItem || []\n    const alreadySelected = currentItems.find(\n      (item: DataItem) => item.id === changes.selectedItem.id\n    )\n    const selectedItem = alreadySelected ? currentItems : [...currentItems, changes.selectedItem]\n\n    // Adding a space at the end to start with a clean search when press enter\n    const inputValue = parseSelectionToInput(selectedItem, lastCharacter)\n    return { ...changes, selectedItem, inputValue }\n  }\n\n  const getSelectedItemsByInput = (input: string, currentSelection: DataItem[]): DataItem[] => {\n    const inputValuesParsed = input ? parseInputToFields(input) : null\n    return inputValuesParsed !== null\n      ? currentSelection.filter(\n          (i: DataItem) =>\n            inputValuesParsed.find(\n              (p) => p.type === i.type && p.labels !== undefined && p.labels.includes(i.label)\n            ) !== undefined\n        )\n      : []\n  }\n\n  const handleChangeInput = (\n    state: DownshiftState<DataItem[]>,\n    changes: StateChangeOptions<DataItem[]>\n  ): StateChangeOptions<DataItem[]> => {\n    cursorPosition = calculateCursorPosition(changes.inputValue || '', state.inputValue || '')\n    const inputValue = changes.inputValue || ''\n    let selectedItem = getSelectedItemsByInput(inputValue, state.selectedItem || [])\n    if (inputValue) {\n      // Remove from current when cursor is in last character to suggest\n      let currentLabelEndIndex = cursorPosition + 1\n      let currentLabelStartIndex = 0\n      for (let i = cursorPosition; i > 0; i--) {\n        if (inputValue[i] === ':' || inputValue[i] === ',') {\n          currentLabelStartIndex = i + 1\n          break\n        }\n      }\n      const currentLabel = replaceWithNormalSpaces(\n        inputValue.slice(currentLabelStartIndex, currentLabelEndIndex)\n      )\n      const currentSelection = selectedItem.find((i: DataItem) => i.label === currentLabel)\n      // Removes the current selected when cursor is in last character to suggest properly\n      // but don't do it when async as would need another fetch\n      if (currentSelection && !asyncFields.includes(currentSelection.type)) {\n        selectedItem = selectedItem.filter((item: DataItem) => item.id !== currentSelection.id)\n      }\n    }\n\n    return { ...changes, selectedItem, isOpen: inputValue !== '' }\n  }\n\n  const stateReducer = useCallback(\n    (\n      state: DownshiftState<DataItem[]>,\n      changes: StateChangeOptions<DataItem[]>\n    ): StateChangeOptions<DataItem[]> => {\n      switch (changes.type as any) {\n        case Downshift.stateChangeTypes.keyDownEnter:\n        case Downshift.stateChangeTypes.clickItem: {\n          return handleConfirmSelection(state, changes)\n        }\n        case 'keyDownComa': {\n          return handleConfirmSelection(state, changes, '')\n        }\n        case Downshift.stateChangeTypes.changeInput: {\n          return handleChangeInput(state, changes)\n        }\n        default:\n          // Avoids warning on uncontrolled input value\n          return { ...changes, inputValue: changes.inputValue || state.inputValue || '' }\n      }\n    },\n    []\n  )\n\n  const customKeyDownHandler = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>, downshift: any) => {\n      const { highlightedIndex, inputValue, setState } = downshift\n      const hasValue = inputValue !== '' && inputValue !== ' '\n      const isSpace = event.key === ' '\n      const isComma = event.key === ','\n      const hasOneOptions = results.length === 1\n      if (hasValue && ((isSpace || isComma) && hasOneOptions)) {\n        ;(event as any).nativeEvent.preventDownshiftDefault = true\n        if (highlightedIndex !== null && highlightedIndex >= 0) {\n          const selectedItem = results[highlightedIndex]\n          if (selectedItem) {\n            setState({\n              type: 'keyDownComa',\n              selectedItem,\n              inputValue,\n            })\n          }\n        }\n      }\n    },\n    [results]\n  )\n\n  const itemToString = useCallback((i: DataItem): string => {\n    return i ? i.label : ''\n  }, [])\n\n  const initialInputValue = useMemo((): string => {\n    return initialSelection !== null ? parseSelectionToInput(initialSelection) : ''\n  }, [])\n\n  return (\n    <SearchComponent\n      items={results}\n      loading={loading}\n      itemToString={itemToString}\n      stateReducer={stateReducer}\n      initialInputValue={initialInputValue}\n      initialSelection={initialSelection}\n      onKeyDown={customKeyDownHandler}\n      onStateChange={handleStateChange}\n    />\n  )\n}\n\nexport default SearchContainer\n","import React, { useMemo, useCallback, useState } from 'react'\nimport styles from './app.module.css'\nimport Search from './components/search/search.container'\nimport qs from 'qs'\nimport { DataItem } from './types/data'\nimport { groupSelectionsByType } from './components/search/search.utils'\nimport { DataSelectionGrouped } from './components/search/search.types'\nimport { SEARCH_TYPES } from './components/search/search.config'\n\nconst capitalizeFirst = (string: string): string => string.charAt(0).toUpperCase() + string.slice(1)\n\nconst App: React.FC = (): React.ReactElement => {\n  const urlSelection = useMemo(() => {\n    const query = qs.parse(window.location.search, { ignoreQueryPrefix: true })\n    return query && query.search ? query.search : []\n  }, [])\n  const [selections, updateSelection] = useState<DataSelectionGrouped>(\n    groupSelectionsByType(urlSelection || [])\n  )\n\n  const handleChange = useCallback((selectedItems: DataItem[]) => {\n    updateSelection(groupSelectionsByType(selectedItems))\n    const selectionQuery = qs.stringify({ search: selectedItems }, { addQueryPrefix: true })\n    const url = window.location.origin + window.location.pathname + selectionQuery\n    window.history.replaceState(window.history.state, '', url)\n  }, [])\n\n  return (\n    <div className={styles.app}>\n      <Search initialSelection={urlSelection} onChange={handleChange} />\n      <div className={styles.selectionContainer}>\n        <h2>Current filter selection by</h2>\n        {selections !== null ? (\n          <ul className={styles.selectionList}>\n            {Object.keys(SEARCH_TYPES).map((key) => (\n              <li key={key}>\n                <strong>{capitalizeFirst(key)}</strong>:{' '}\n                {selections[key] !== undefined ? (\n                  selections[key].values.map((value, index) => (\n                    <span>\n                      {value.label}({value.id})\n                      {index === selections[key].values.length - 1 ? '' : ','}\n                    </span>\n                  ))\n                ) : (\n                  <span>no filter</span>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <span>none</span>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search_searchContainer__MIOBX\",\"searchInput\":\"search_searchInput__3QW9t\",\"optionList\":\"search_optionList__2xo8Z\",\"loadingContainer\":\"search_loadingContainer__1zcWl\"};"],"sourceRoot":""}