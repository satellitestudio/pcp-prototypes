{"version":3,"sources":["components/search/search.tsx","data/data.js","data/rfmos.js","data/flags.js","components/search/search.container.tsx","app.tsx","serviceWorker.ts","index.tsx","components/search/search.module.css"],"names":["Search","props","itemToString","onChange","stateReducer","items","onStateChange","react_default","a","createElement","downshift_esm","defaultHighlightedIndex","downshift","getInputProps","getMenuProps","getItemProps","isOpen","selectedItem","highlightedIndex","className","styles","searchContainer","Object","assign","searchInput","placeholder","optionList","map","item","index","key","id","style","backgroundColor","color","type","data","concat","toConsumableArray","label","r","objectSpread","breakingSpaceRegex","RegExp","replaceWithNormalSpaces","string","replace","SearchContainer","cursorPosition","_useState","useState","_useState2","slicedToArray","itemsFiltered","setItemsFiltered","search","selectedItems","console","table","i","state","changes","Downshift","stateChangeTypes","keyDownEnter","clickItem","currentItems","find","inputValue","selections","values","reduce","acc","v","join","parseSelectionToInput","selection","push","defineProperty","changeInput","length","Math","max","undefined","inputValuesParsed","split","filter","s","_s$split","_s$split2","labels","p","includes","currentLabelEndIndex","currentLabelStartIndex","currentLabel","slice","currentSelection","isLastSpace","downshiftState","hasOwnProperty","input","selectedItemIds","selectedItemTypes","selectedItemLabels","existingSearchTypes","cleanValues","currentTypeEndIndex","currentTypeStartIndex","currentType","itemsNotSelected","cleanValue","matchSorter","keys","getItemsToShow","App","search_container","Boolean","window","location","hostname","match","ReactDOM","render","src_app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"2RAwEeA,EAvDuB,SAACC,GAAU,IACvCC,EAA+DD,EAA/DC,aAAcC,EAAiDF,EAAjDE,SAAUC,EAAuCH,EAAvCG,aAAcC,EAAyBJ,EAAzBI,MAAOC,EAAkBL,EAAlBK,cACrD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEP,SAAUA,EACVC,aAAcA,EACdF,aAAcA,EACdI,cAAeA,EACfK,wBAAyB,GAExB,SAACC,GAAc,IAEZC,EAMED,EANFC,cACAC,EAKEF,EALFE,aACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,OACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,iBAEF,OACEX,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAOC,iBACrBd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAAa,OAAAC,OAAA,CACEJ,UAAWC,IAAOI,aACdX,EAAc,CAChBY,YAAa,uBAIjBT,EACAT,EAAAC,EAAAC,cAAA,KAAAa,OAAAC,OAAA,CAAIJ,UAAWC,IAAOM,YAAgBZ,KACnCT,EAAMsB,IAAI,SAACC,EAAgBC,GAAjB,OACTtB,EAAAC,EAAAC,cAAA,KAAAa,OAAAC,OAAA,CACEO,IAAKF,EAAKG,IACNhB,EAAa,CACfa,OACAC,UAJJ,CAMEG,MAAO,CACLC,gBAAiBf,IAAqBW,EAAQ,OAAS,cACvDK,MAAOjB,IAAiBW,EAAO,UAAY,UAG5CA,EAAKO,KAXR,KAWgBjC,EAAa0B,OAdxB,SC3CTQ,EAAA,GAAAC,OAAAf,OAAAgB,EAAA,EAAAhB,CCHC,CACb,CACES,GAAI,QACJQ,MAAO,SAET,CACER,GAAI,OACJQ,MAAO,QAET,CACER,GAAI,QACJQ,MAAO,SAET,CACER,GAAI,QACJQ,MAAO,SAET,CACER,GAAI,QACJQ,MAAO,SAET,CACER,GAAI,QACJQ,MAAO,UDnBAZ,IAAI,SAACa,GAAD,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAA,GAAakB,EAAb,CAAgBL,KAAM,YADrCb,OAAAgB,EAAA,EAAAhB,CEHe,CACb,CACES,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,wBAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,kBAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,uCAET,CACER,GAAI,MACJQ,MAAO,uBAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,gBAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,0BAET,CACER,GAAI,MACJQ,MAAO,uBAET,CACER,GAAI,MACJQ,MAAO,gDAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,yBAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,4BAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,2BAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,yBAET,CACER,GAAI,MACJQ,MAAO,gBAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,kBAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,sBAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,kBAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,kBAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,qBAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,qCAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,kCAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,yBAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,gBAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,4BAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,kBAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,oBAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,gBAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,aAET,CACER,GAAI,MACJQ,MAAO,iBAET,CACER,GAAI,MACJQ,MAAO,0BAET,CACER,GAAI,MACJQ,MAAO,mBAET,CACER,GAAI,MACJQ,MAAO,gBAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MAAO,6BAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,eAET,CACER,GAAI,MACJQ,MAAO,kCAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,UAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,gBAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,SAET,CACER,GAAI,MACJQ,MAAO,4BAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,QAET,CACER,GAAI,MACJQ,MAAO,YAET,CACER,GAAI,MACJQ,MAAO,cAET,CACER,GAAI,MACJQ,MAAO,WAET,CACER,GAAI,MACJQ,MA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","file":"static/js/main.3ee0edba.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './search.module.css'\nimport Downshift, { DownshiftState, StateChangeOptions } from 'downshift'\nimport { DataItem } from '../../types/data'\n\ninterface SearchProps {\n  isOpen?: boolean\n  itemToString(obj: DataItem): string\n  onChange(selectedItems: DataItem[], downshiftState: DownshiftState<any>): void\n  items: DataItem[]\n  stateReducer(\n    state: DownshiftState<any>,\n    changes: StateChangeOptions<any>\n  ): StateChangeOptions<any>\n  onStateChange(changes: StateChangeOptions<any>, downshiftState: DownshiftState<any>): void\n}\n\nconst Search: React.FC<SearchProps> = (props) => {\n  const { itemToString, onChange, stateReducer, items, onStateChange } = props\n  return (\n    <Downshift\n      onChange={onChange}\n      stateReducer={stateReducer}\n      itemToString={itemToString}\n      onStateChange={onStateChange}\n      defaultHighlightedIndex={0}\n    >\n      {(downshift) => {\n        const {\n          getInputProps,\n          getMenuProps,\n          getItemProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex,\n        } = downshift\n        return (\n          <div className={styles.searchContainer}>\n            <div>\n              <input\n                className={styles.searchInput}\n                {...getInputProps({\n                  placeholder: 'Start searching',\n                })}\n              />\n            </div>\n            {!isOpen ? null : (\n              <ul className={styles.optionList} {...getMenuProps()}>\n                {items.map((item: DataItem, index: number) => (\n                  <li\n                    key={item.id}\n                    {...getItemProps({\n                      item,\n                      index,\n                    })}\n                    style={{\n                      backgroundColor: highlightedIndex === index ? '#ccc' : 'transparent',\n                      color: selectedItem === item ? '#0f0f0f' : '#000',\n                    }}\n                  >\n                    {item.type}: {itemToString(item)}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )\n      }}\n    </Downshift>\n  )\n}\n\nexport default Search\n","import rfmos from './rfmos'\nimport flags from './flags'\n\nexport default [\n  ...rfmos.map((r) => ({ ...r, type: 'rfmo' })),\n  ...flags.map((r) => ({ ...r, type: 'flag' })),\n]\n","export default [\n  {\n    id: 'ICCAT',\n    label: 'ICCAT',\n  },\n  {\n    id: 'IOTC',\n    label: 'IOTC',\n  },\n  {\n    id: 'WCPFC',\n    label: 'WCPFC',\n  },\n  {\n    id: 'IATTC',\n    label: 'IATTC',\n  },\n  {\n    id: 'AIDCP',\n    label: 'AIDCP',\n  },\n  {\n    id: 'CCSBT',\n    label: 'CCSBT',\n  },\n]\n","export default [\n  {\n    id: 'ABW',\n    label: 'Aruba',\n  },\n  {\n    id: 'AFG',\n    label: 'Afghanistan',\n  },\n  {\n    id: 'AGO',\n    label: 'Angola',\n  },\n  {\n    id: 'AIA',\n    label: 'Anguilla',\n  },\n  {\n    id: 'ALA',\n    label: 'Åland Islands',\n  },\n  {\n    id: 'ALB',\n    label: 'Albania',\n  },\n  {\n    id: 'AND',\n    label: 'Andorra',\n  },\n  {\n    id: 'ARE',\n    label: 'United Arab Emirates',\n  },\n  {\n    id: 'ARG',\n    label: 'Argentina',\n  },\n  {\n    id: 'ARM',\n    label: 'Armenia',\n  },\n  {\n    id: 'ASM',\n    label: 'American Samoa',\n  },\n  {\n    id: 'ATA',\n    label: 'Antarctica',\n  },\n  {\n    id: 'ATF',\n    label: 'French Southern and Antarctic Lands',\n  },\n  {\n    id: 'ATG',\n    label: 'Antigua and Barbuda',\n  },\n  {\n    id: 'AUS',\n    label: 'Australia',\n  },\n  {\n    id: 'AUT',\n    label: 'Austria',\n  },\n  {\n    id: 'AZE',\n    label: 'Azerbaijan',\n  },\n  {\n    id: 'BDI',\n    label: 'Burundi',\n  },\n  {\n    id: 'BEL',\n    label: 'Belgium',\n  },\n  {\n    id: 'BEN',\n    label: 'Benin',\n  },\n  {\n    id: 'BFA',\n    label: 'Burkina Faso',\n  },\n  {\n    id: 'BGD',\n    label: 'Bangladesh',\n  },\n  {\n    id: 'BGR',\n    label: 'Bulgaria',\n  },\n  {\n    id: 'BHR',\n    label: 'Bahrain',\n  },\n  {\n    id: 'BHS',\n    label: 'Bahamas',\n  },\n  {\n    id: 'BIH',\n    label: 'Bosnia and Herzegovina',\n  },\n  {\n    id: 'BLM',\n    label: 'Saint Barthélemy',\n  },\n  {\n    id: 'SHN',\n    label: 'Saint Helena, Ascension and Tristan da Cunha',\n  },\n  {\n    id: 'BLR',\n    label: 'Belarus',\n  },\n  {\n    id: 'BLZ',\n    label: 'Belize',\n  },\n  {\n    id: 'BMU',\n    label: 'Bermuda',\n  },\n  {\n    id: 'BOL',\n    label: 'Bolivia',\n  },\n  {\n    id: 'BES',\n    label: 'Caribbean Netherlands',\n  },\n  {\n    id: 'BRA',\n    label: 'Brazil',\n  },\n  {\n    id: 'BRB',\n    label: 'Barbados',\n  },\n  {\n    id: 'BRN',\n    label: 'Brunei',\n  },\n  {\n    id: 'BTN',\n    label: 'Bhutan',\n  },\n  {\n    id: 'BVT',\n    label: 'Bouvet Island',\n  },\n  {\n    id: 'BWA',\n    label: 'Botswana',\n  },\n  {\n    id: 'CAF',\n    label: 'Central African Republic',\n  },\n  {\n    id: 'CAN',\n    label: 'Canada',\n  },\n  {\n    id: 'CCK',\n    label: 'Cocos (Keeling) Islands',\n  },\n  {\n    id: 'CHE',\n    label: 'Switzerland',\n  },\n  {\n    id: 'CHL',\n    label: 'Chile',\n  },\n  {\n    id: 'CHN',\n    label: 'China',\n  },\n  {\n    id: 'CIV',\n    label: 'Ivory Coast',\n  },\n  {\n    id: 'CMR',\n    label: 'Cameroon',\n  },\n  {\n    id: 'COD',\n    label: 'DR Congo',\n  },\n  {\n    id: 'COG',\n    label: 'Republic of the Congo',\n  },\n  {\n    id: 'COK',\n    label: 'Cook Islands',\n  },\n  {\n    id: 'COL',\n    label: 'Colombia',\n  },\n  {\n    id: 'COM',\n    label: 'Comoros',\n  },\n  {\n    id: 'CPV',\n    label: 'Cape Verde',\n  },\n  {\n    id: 'CRI',\n    label: 'Costa Rica',\n  },\n  {\n    id: 'CUB',\n    label: 'Cuba',\n  },\n  {\n    id: 'CUW',\n    label: 'Curaçao',\n  },\n  {\n    id: 'CXR',\n    label: 'Christmas Island',\n  },\n  {\n    id: 'CYM',\n    label: 'Cayman Islands',\n  },\n  {\n    id: 'CYP',\n    label: 'Cyprus',\n  },\n  {\n    id: 'CZE',\n    label: 'Czechia',\n  },\n  {\n    id: 'DEU',\n    label: 'Germany',\n  },\n  {\n    id: 'DJI',\n    label: 'Djibouti',\n  },\n  {\n    id: 'DMA',\n    label: 'Dominica',\n  },\n  {\n    id: 'DNK',\n    label: 'Denmark',\n  },\n  {\n    id: 'DOM',\n    label: 'Dominican Republic',\n  },\n  {\n    id: 'DZA',\n    label: 'Algeria',\n  },\n  {\n    id: 'ECU',\n    label: 'Ecuador',\n  },\n  {\n    id: 'EGY',\n    label: 'Egypt',\n  },\n  {\n    id: 'ERI',\n    label: 'Eritrea',\n  },\n  {\n    id: 'ESH',\n    label: 'Western Sahara',\n  },\n  {\n    id: 'ESP',\n    label: 'Spain',\n  },\n  {\n    id: 'EST',\n    label: 'Estonia',\n  },\n  {\n    id: 'ETH',\n    label: 'Ethiopia',\n  },\n  {\n    id: 'FIN',\n    label: 'Finland',\n  },\n  {\n    id: 'FJI',\n    label: 'Fiji',\n  },\n  {\n    id: 'FLK',\n    label: 'Falkland Islands',\n  },\n  {\n    id: 'FRA',\n    label: 'France',\n  },\n  {\n    id: 'FRO',\n    label: 'Faroe Islands',\n  },\n  {\n    id: 'FSM',\n    label: 'Micronesia',\n  },\n  {\n    id: 'GAB',\n    label: 'Gabon',\n  },\n  {\n    id: 'GBR',\n    label: 'United Kingdom',\n  },\n  {\n    id: 'GEO',\n    label: 'Georgia',\n  },\n  {\n    id: 'GGY',\n    label: 'Guernsey',\n  },\n  {\n    id: 'GHA',\n    label: 'Ghana',\n  },\n  {\n    id: 'GIB',\n    label: 'Gibraltar',\n  },\n  {\n    id: 'GIN',\n    label: 'Guinea',\n  },\n  {\n    id: 'GLP',\n    label: 'Guadeloupe',\n  },\n  {\n    id: 'GMB',\n    label: 'Gambia',\n  },\n  {\n    id: 'GNB',\n    label: 'Guinea-Bissau',\n  },\n  {\n    id: 'GNQ',\n    label: 'Equatorial Guinea',\n  },\n  {\n    id: 'GRC',\n    label: 'Greece',\n  },\n  {\n    id: 'GRD',\n    label: 'Grenada',\n  },\n  {\n    id: 'GRL',\n    label: 'Greenland',\n  },\n  {\n    id: 'GTM',\n    label: 'Guatemala',\n  },\n  {\n    id: 'GUF',\n    label: 'French Guiana',\n  },\n  {\n    id: 'GUM',\n    label: 'Guam',\n  },\n  {\n    id: 'GUY',\n    label: 'Guyana',\n  },\n  {\n    id: 'HKG',\n    label: 'Hong Kong',\n  },\n  {\n    id: 'HMD',\n    label: 'Heard Island and McDonald Islands',\n  },\n  {\n    id: 'HND',\n    label: 'Honduras',\n  },\n  {\n    id: 'HRV',\n    label: 'Croatia',\n  },\n  {\n    id: 'HTI',\n    label: 'Haiti',\n  },\n  {\n    id: 'HUN',\n    label: 'Hungary',\n  },\n  {\n    id: 'IDN',\n    label: 'Indonesia',\n  },\n  {\n    id: 'IMN',\n    label: 'Isle of Man',\n  },\n  {\n    id: 'IND',\n    label: 'India',\n  },\n  {\n    id: 'IOT',\n    label: 'British Indian Ocean Territory',\n  },\n  {\n    id: 'IRL',\n    label: 'Ireland',\n  },\n  {\n    id: 'IRN',\n    label: 'Iran',\n  },\n  {\n    id: 'IRQ',\n    label: 'Iraq',\n  },\n  {\n    id: 'ISL',\n    label: 'Iceland',\n  },\n  {\n    id: 'ISR',\n    label: 'Israel',\n  },\n  {\n    id: 'ITA',\n    label: 'Italy',\n  },\n  {\n    id: 'JAM',\n    label: 'Jamaica',\n  },\n  {\n    id: 'JEY',\n    label: 'Jersey',\n  },\n  {\n    id: 'JOR',\n    label: 'Jordan',\n  },\n  {\n    id: 'JPN',\n    label: 'Japan',\n  },\n  {\n    id: 'KAZ',\n    label: 'Kazakhstan',\n  },\n  {\n    id: 'KEN',\n    label: 'Kenya',\n  },\n  {\n    id: 'KGZ',\n    label: 'Kyrgyzstan',\n  },\n  {\n    id: 'KHM',\n    label: 'Cambodia',\n  },\n  {\n    id: 'KIR',\n    label: 'Kiribati',\n  },\n  {\n    id: 'KNA',\n    label: 'Saint Kitts and Nevis',\n  },\n  {\n    id: 'KOR',\n    label: 'South Korea',\n  },\n  {\n    id: 'UNK',\n    label: 'Kosovo',\n  },\n  {\n    id: 'KWT',\n    label: 'Kuwait',\n  },\n  {\n    id: 'LAO',\n    label: 'Laos',\n  },\n  {\n    id: 'LBN',\n    label: 'Lebanon',\n  },\n  {\n    id: 'LBR',\n    label: 'Liberia',\n  },\n  {\n    id: 'LBY',\n    label: 'Libya',\n  },\n  {\n    id: 'LCA',\n    label: 'Saint Lucia',\n  },\n  {\n    id: 'LIE',\n    label: 'Liechtenstein',\n  },\n  {\n    id: 'LKA',\n    label: 'Sri Lanka',\n  },\n  {\n    id: 'LSO',\n    label: 'Lesotho',\n  },\n  {\n    id: 'LTU',\n    label: 'Lithuania',\n  },\n  {\n    id: 'LUX',\n    label: 'Luxembourg',\n  },\n  {\n    id: 'LVA',\n    label: 'Latvia',\n  },\n  {\n    id: 'MAC',\n    label: 'Macau',\n  },\n  {\n    id: 'MAF',\n    label: 'Saint Martin',\n  },\n  {\n    id: 'MAR',\n    label: 'Morocco',\n  },\n  {\n    id: 'MCO',\n    label: 'Monaco',\n  },\n  {\n    id: 'MDA',\n    label: 'Moldova',\n  },\n  {\n    id: 'MDG',\n    label: 'Madagascar',\n  },\n  {\n    id: 'MDV',\n    label: 'Maldives',\n  },\n  {\n    id: 'MEX',\n    label: 'Mexico',\n  },\n  {\n    id: 'MHL',\n    label: 'Marshall Islands',\n  },\n  {\n    id: 'MKD',\n    label: 'Macedonia',\n  },\n  {\n    id: 'MLI',\n    label: 'Mali',\n  },\n  {\n    id: 'MLT',\n    label: 'Malta',\n  },\n  {\n    id: 'MMR',\n    label: 'Myanmar',\n  },\n  {\n    id: 'MNE',\n    label: 'Montenegro',\n  },\n  {\n    id: 'MNG',\n    label: 'Mongolia',\n  },\n  {\n    id: 'MNP',\n    label: 'Northern Mariana Islands',\n  },\n  {\n    id: 'MOZ',\n    label: 'Mozambique',\n  },\n  {\n    id: 'MRT',\n    label: 'Mauritania',\n  },\n  {\n    id: 'MSR',\n    label: 'Montserrat',\n  },\n  {\n    id: 'MTQ',\n    label: 'Martinique',\n  },\n  {\n    id: 'MUS',\n    label: 'Mauritius',\n  },\n  {\n    id: 'MWI',\n    label: 'Malawi',\n  },\n  {\n    id: 'MYS',\n    label: 'Malaysia',\n  },\n  {\n    id: 'MYT',\n    label: 'Mayotte',\n  },\n  {\n    id: 'NAM',\n    label: 'Namibia',\n  },\n  {\n    id: 'NCL',\n    label: 'New Caledonia',\n  },\n  {\n    id: 'NER',\n    label: 'Niger',\n  },\n  {\n    id: 'NFK',\n    label: 'Norfolk Island',\n  },\n  {\n    id: 'NGA',\n    label: 'Nigeria',\n  },\n  {\n    id: 'NIC',\n    label: 'Nicaragua',\n  },\n  {\n    id: 'NIU',\n    label: 'Niue',\n  },\n  {\n    id: 'NLD',\n    label: 'Netherlands',\n  },\n  {\n    id: 'NOR',\n    label: 'Norway',\n  },\n  {\n    id: 'NPL',\n    label: 'Nepal',\n  },\n  {\n    id: 'NRU',\n    label: 'Nauru',\n  },\n  {\n    id: 'NZL',\n    label: 'New Zealand',\n  },\n  {\n    id: 'OMN',\n    label: 'Oman',\n  },\n  {\n    id: 'PAK',\n    label: 'Pakistan',\n  },\n  {\n    id: 'PAN',\n    label: 'Panama',\n  },\n  {\n    id: 'PCN',\n    label: 'Pitcairn Islands',\n  },\n  {\n    id: 'PER',\n    label: 'Peru',\n  },\n  {\n    id: 'PHL',\n    label: 'Philippines',\n  },\n  {\n    id: 'PLW',\n    label: 'Palau',\n  },\n  {\n    id: 'PNG',\n    label: 'Papua New Guinea',\n  },\n  {\n    id: 'POL',\n    label: 'Poland',\n  },\n  {\n    id: 'PRI',\n    label: 'Puerto Rico',\n  },\n  {\n    id: 'PRK',\n    label: 'North Korea',\n  },\n  {\n    id: 'PRT',\n    label: 'Portugal',\n  },\n  {\n    id: 'PRY',\n    label: 'Paraguay',\n  },\n  {\n    id: 'PSE',\n    label: 'Palestine',\n  },\n  {\n    id: 'PYF',\n    label: 'French Polynesia',\n  },\n  {\n    id: 'QAT',\n    label: 'Qatar',\n  },\n  {\n    id: 'REU',\n    label: 'Réunion',\n  },\n  {\n    id: 'ROU',\n    label: 'Romania',\n  },\n  {\n    id: 'RUS',\n    label: 'Russia',\n  },\n  {\n    id: 'RWA',\n    label: 'Rwanda',\n  },\n  {\n    id: 'SAU',\n    label: 'Saudi Arabia',\n  },\n  {\n    id: 'SDN',\n    label: 'Sudan',\n  },\n  {\n    id: 'SEN',\n    label: 'Senegal',\n  },\n  {\n    id: 'SGP',\n    label: 'Singapore',\n  },\n  {\n    id: 'SGS',\n    label: 'South Georgia',\n  },\n  {\n    id: 'SJM',\n    label: 'Svalbard and Jan Mayen',\n  },\n  {\n    id: 'SLB',\n    label: 'Solomon Islands',\n  },\n  {\n    id: 'SLE',\n    label: 'Sierra Leone',\n  },\n  {\n    id: 'SLV',\n    label: 'El Salvador',\n  },\n  {\n    id: 'SMR',\n    label: 'San Marino',\n  },\n  {\n    id: 'SOM',\n    label: 'Somalia',\n  },\n  {\n    id: 'SPM',\n    label: 'Saint Pierre and Miquelon',\n  },\n  {\n    id: 'SRB',\n    label: 'Serbia',\n  },\n  {\n    id: 'SSD',\n    label: 'South Sudan',\n  },\n  {\n    id: 'STP',\n    label: 'São Tomé and Príncipe',\n  },\n  {\n    id: 'SUR',\n    label: 'Suriname',\n  },\n  {\n    id: 'SVK',\n    label: 'Slovakia',\n  },\n  {\n    id: 'SVN',\n    label: 'Slovenia',\n  },\n  {\n    id: 'SWE',\n    label: 'Sweden',\n  },\n  {\n    id: 'SWZ',\n    label: 'Eswatini',\n  },\n  {\n    id: 'SXM',\n    label: 'Sint Maarten',\n  },\n  {\n    id: 'SYC',\n    label: 'Seychelles',\n  },\n  {\n    id: 'SYR',\n    label: 'Syria',\n  },\n  {\n    id: 'TCA',\n    label: 'Turks and Caicos Islands',\n  },\n  {\n    id: 'TCD',\n    label: 'Chad',\n  },\n  {\n    id: 'TGO',\n    label: 'Togo',\n  },\n  {\n    id: 'THA',\n    label: 'Thailand',\n  },\n  {\n    id: 'TJK',\n    label: 'Tajikistan',\n  },\n  {\n    id: 'TKL',\n    label: 'Tokelau',\n  },\n  {\n    id: 'TKM',\n    label: 'Turkmenistan',\n  },\n  {\n    id: 'TLS',\n    label: 'Timor-Leste',\n  },\n  {\n    id: 'TON',\n    label: 'Tonga',\n  },\n  {\n    id: 'TTO',\n    label: 'Trinidad and Tobago',\n  },\n  {\n    id: 'TUN',\n    label: 'Tunisia',\n  },\n  {\n    id: 'TUR',\n    label: 'Turkey',\n  },\n  {\n    id: 'TUV',\n    label: 'Tuvalu',\n  },\n  {\n    id: 'TWN',\n    label: 'Taiwan',\n  },\n  {\n    id: 'TZA',\n    label: 'Tanzania',\n  },\n  {\n    id: 'UGA',\n    label: 'Uganda',\n  },\n  {\n    id: 'UKR',\n    label: 'Ukraine',\n  },\n  {\n    id: 'UMI',\n    label: 'United States Minor Outlying Islands',\n  },\n  {\n    id: 'URY',\n    label: 'Uruguay',\n  },\n  {\n    id: 'USA',\n    label: 'United States',\n  },\n  {\n    id: 'UZB',\n    label: 'Uzbekistan',\n  },\n  {\n    id: 'VAT',\n    label: 'Vatican City',\n  },\n  {\n    id: 'VCT',\n    label: 'Saint Vincent and the Grenadines',\n  },\n  {\n    id: 'VEN',\n    label: 'Venezuela',\n  },\n  {\n    id: 'VGB',\n    label: 'British Virgin Islands',\n  },\n  {\n    id: 'VIR',\n    label: 'United States Virgin Islands',\n  },\n  {\n    id: 'VNM',\n    label: 'Vietnam',\n  },\n  {\n    id: 'VUT',\n    label: 'Vanuatu',\n  },\n  {\n    id: 'WLF',\n    label: 'Wallis and Futuna',\n  },\n  {\n    id: 'WSM',\n    label: 'Samoa',\n  },\n  {\n    id: 'YEM',\n    label: 'Yemen',\n  },\n  {\n    id: 'ZAF',\n    label: 'South Africa',\n  },\n  {\n    id: 'ZMB',\n    label: 'Zambia',\n  },\n  {\n    id: 'ZWE',\n    label: 'Zimbabwe',\n  },\n]\n","import React, { useState } from 'react'\nimport matchSorter from 'match-sorter'\nimport SearchComponent from './search'\nimport { DataValue, DataSelection, DataSelectionGrouped } from './search.types'\nimport Downshift, { DownshiftState, StateChangeOptions } from 'downshift'\n\nimport data from '../../data/data'\nimport { DataItem } from '../../types/data'\n\n// Hack to look like spaces but be able to identify between input spaces and label spaces\nconst breakingSpaceCharacter = '\\u00a0'\nconst breakingSpaceRegex = new RegExp(breakingSpaceCharacter, 'g')\nconst replaceWithBreakingSpaces = (string: string) => string.replace(/\\s/gi, breakingSpaceCharacter)\nconst replaceWithNormalSpaces = (string: string) => string.replace(breakingSpaceRegex, ' ')\n\nconst SearchContainer: React.FC = () => {\n  const items: DataItem[] = data\n  let cursorPosition = 0\n  const [itemsFiltered, setItemsFiltered] = useState<DataItem[]>([])\n\n  const getItemsToShow = (\n    input: string,\n    selectedItems: DataItem[],\n    cursorPosition: number\n  ): DataItem[] => {\n    if (!input) return items\n    let selectedItemIds = (selectedItems && selectedItems.map((i) => i.id)) || []\n    const selectedItemTypes = (selectedItems && selectedItems.map((i) => i.type)) || []\n    const selectedItemLabels = (selectedItems && selectedItems.map((i) => i.label)) || []\n    const existingSearchTypes: { [type: string]: boolean } = {}\n\n    const cleanValues = input\n      .replace(/:/gi, ' ')\n      .replace(/,/gi, ' ')\n      .split(' ')\n      // Space replacement needs to be done after splitting by regular spaces\n      .map(replaceWithNormalSpaces)\n      .filter((v) => {\n        if (!v || v === '') return false\n        if (selectedItemTypes.includes(v)) {\n          // Needed when search by type with a current type filter added\n          if (!existingSearchTypes[v]) {\n            existingSearchTypes[v] = true\n            return false\n          } else {\n            return true\n          }\n        }\n        return !selectedItemLabels.includes(v)\n      })\n    const isLastSpace = input[cursorPosition] === ' '\n    if (!isLastSpace) {\n      let currentTypeEndIndex = 0\n      let currentTypeStartIndex = 0\n      for (let i = cursorPosition; i > 0; i--) {\n        if (input[i] === ':') {\n          currentTypeEndIndex = i\n        } else if (input[i] === ' ') {\n          currentTypeStartIndex = i + 1\n          break\n        }\n      }\n      const currentType = input.slice(currentTypeStartIndex, currentTypeEndIndex)\n      cleanValues.push(currentType)\n    }\n\n    const itemsNotSelected =\n      selectedItemIds.length > 0 ? items.filter((i) => !selectedItemIds.includes(i.id)) : items\n\n    return cleanValues.reduce((acc, cleanValue) => {\n      return matchSorter(acc, cleanValue, { keys: ['label', 'type'] })\n    }, itemsNotSelected)\n  }\n\n  const handleStateChange = (\n    changes: StateChangeOptions<any>,\n    downshiftState: DownshiftState<any>\n  ) => {\n    if (changes.hasOwnProperty('inputValue')) {\n      const { inputValue, selectedItem } = downshiftState\n      setItemsFiltered(getItemsToShow(inputValue || '', selectedItem, cursorPosition))\n    }\n  }\n\n  const groupSelectionsByType = (selections: DataItem[]): DataSelectionGrouped => {\n    return selections.reduce((acc: DataSelectionGrouped, selection: DataItem) => {\n      const { type, id, label } = selection\n      const existingType = acc[type]\n      if (existingType) {\n        acc[type].values.push({ id, label })\n        return acc\n      }\n      return {\n        ...acc,\n        [type]: { type, values: [{ id, label }] },\n      }\n    }, {})\n  }\n\n  const parseSelectionToInput = (selections: DataSelectionGrouped) => {\n    return Object.values(selections).reduce(\n      (acc: string, item: DataSelection) =>\n        `${acc}${item.type}:${item.values\n          .map((v: DataValue) => replaceWithBreakingSpaces(v.label))\n          .join(',')} `,\n      ''\n    )\n  }\n\n  const stateReducer = (state: DownshiftState<any>, changes: StateChangeOptions<any>): any => {\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.keyDownEnter:\n      case Downshift.stateChangeTypes.clickItem: {\n        const currentItems = state.selectedItem || []\n        const alreadySelected = currentItems.find(\n          (item: any) => item.id === changes.selectedItem.id\n        )\n        const selectedItem = alreadySelected\n          ? currentItems\n          : [...currentItems, changes.selectedItem]\n        const groupedSelections = groupSelectionsByType(selectedItem)\n        const inputValue = parseSelectionToInput(groupedSelections)\n        return {\n          ...changes,\n          selectedItem,\n          inputValue,\n        }\n      }\n      case Downshift.stateChangeTypes.changeInput: {\n        cursorPosition = 0\n        if (changes.inputValue && state.inputValue) {\n          const length = Math.max(state.inputValue.length, changes.inputValue.length)\n          for (let i = 0; i < length; i++) {\n            if (changes.inputValue[i] === undefined) {\n              cursorPosition -= 1\n            } else if (state.inputValue[i] === changes.inputValue[i]) {\n              cursorPosition += 1\n            }\n          }\n        }\n        const inputValuesParsed = changes.inputValue\n          ? changes.inputValue\n              .split(' ')\n              .filter((s) => s)\n              .map((s) => {\n                const [type, labels] = s.split(':')\n                return { type, labels: labels && labels.split(',').map(replaceWithNormalSpaces) }\n              })\n          : null\n\n        let selectedItem =\n          inputValuesParsed !== null && items !== null\n            ? items.filter(\n                (i: DataItem) =>\n                  inputValuesParsed.find(\n                    (p) => p.type === i.type && p.labels !== undefined && p.labels.includes(i.label)\n                  ) !== undefined\n              )\n            : []\n\n        if (changes.inputValue) {\n          // Remove from current when cursor is in last character to suggest\n          let currentLabelEndIndex = cursorPosition + 1\n          let currentLabelStartIndex = 0\n          for (let i = cursorPosition; i > 0; i--) {\n            if (changes.inputValue[i] === ':' || changes.inputValue[i] === ',') {\n              currentLabelStartIndex = i + 1\n              break\n            }\n          }\n          const currentLabel = replaceWithNormalSpaces(\n            changes.inputValue.slice(currentLabelStartIndex, currentLabelEndIndex)\n          )\n          const currentSelection = selectedItem.find((i) => i.label === currentLabel)\n          if (currentSelection) {\n            selectedItem = selectedItem.filter((item) => item.id !== currentSelection.id)\n          }\n        }\n        const isLastSpace =\n          changes.inputValue && changes.inputValue[changes.inputValue.length - 1] === ' '\n\n        return {\n          ...changes,\n          selectedItem,\n          isOpen: !isLastSpace,\n        }\n      }\n      default:\n        return changes\n    }\n  }\n\n  const handleChange = (selectedItems: DataItem[]) => {\n    console.table(selectedItems)\n  }\n\n  const itemToString = (i: DataItem): string => {\n    return i ? i.label : ''\n  }\n\n  return (\n    <SearchComponent\n      items={itemsFiltered}\n      onChange={handleChange}\n      itemToString={itemToString}\n      stateReducer={stateReducer}\n      onStateChange={handleStateChange}\n    />\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport './app.css'\nimport Search from './components/search/search.container'\n\nconst App: React.FC = (): React.ReactElement => (\n  <div className=\"app\">\n    <Search />\n  </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search_searchContainer__MIOBX\",\"searchInput\":\"search_searchInput__3QW9t\",\"optionList\":\"search_optionList__2xo8Z\"};"],"sourceRoot":""}